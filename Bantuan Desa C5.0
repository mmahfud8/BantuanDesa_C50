{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"name":"R","codemirror_mode":"r","pygments_lexer":"r","mimetype":"text/x-r-source","file_extension":".r","version":"4.0.5"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":8961861,"sourceType":"datasetVersion","datasetId":5394160}],"dockerImageVersionId":30583,"isInternetEnabled":true,"language":"r","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"install.packages(\"FSelector\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"library(\"readxl\")\nlibrary(writexl)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Memasukkan Data\ndf <- read_excel(\"/kaggle/input/dataset-penduduk/Dataset/DataPenduduk.xlsx\")\ndf","metadata":{"_uuid":"051d70d956493feee0c6d64651c6a088724dca2a","_execution_state":"idle","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Preprocessing**","metadata":{}},{"cell_type":"code","source":"library(ggplot2)\n\nggplot(df,\n       aes(x = Usia,\n           y = Penghasilan,\n           color = Bantuan_Desa,\n           shape = Pendidikan_Terakhir,\n          size = Anggota_Keluarga))+\n    geom_point(alpha = .8)+\ntheme_minimal()+\nlabs(x = \"Usia\",\n     y = \"Penghasilan\",\n     color = \"Bantuan Desa\",\n     size = \"Anggota Keluarga\",\n    shape = \"Pendidikan Terakhir\")\nggsave(\"ggplot.png\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"str(df)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df$Bantuan_Desa <- as.factor(df$Bantuan_Desa)\ndf$Jenis_Kelamin <- as.factor(df$Jenis_Kelamin)\n\ndf$Usia <- cut(df$Usia, breaks = seq(from = 0, to = 100, by = 25), include.lowest = TRUE, labels = c('0-24', '25-49', '50-74', '75-99'))\ndf$Anggota_Keluarga <- cut(df$Anggota_Keluarga, breaks = seq(from = 0, to = 6, by = 1), include.lowest = TRUE, labels = c('1', '2', '3', '4', '5', '6+'))\n\ndf$Pendidikan_Terakhir <- as.factor(df$Pendidikan_Terakhir)\ndf$Pekerjaan <- as.factor(df$Pekerjaan)\n\ndf$Penghasilan <- cut(df$Penghasilan, breaks = c(seq(from = 0, to = 5000000, by = 500000), Inf), include.lowest = TRUE, right = FALSE, labels = c('0-499.999', '500.000-999.999', '1.000.000-1.499.999', '1.500.000-1.999.999', '2.000.000-2.499.999', '2.500.000-2.999.999', '3.000.000-3.499.999', '3.500.000-3.999.999', '4.000.000-4.499.999', '4.500.000-4.999.999', '5.000.000+'))\ndf$Kepemilikan_Rumah <- as.factor(df$Kepemilikan_Rumah)\ndf$Dinding <- as.factor(df$Dinding)\ndf$Lantai <- as.factor(df$Lantai)\n\ndf$Aset_Tanah <- factor(df$Aset_Tanah, levels = c('1,0 - 5,0 ha', '0,9 - 1,0 ha','0,7 - 0,8 ha', '0,6 - 0,7 ha', '0,5 - 0,6 ha', '0,4 - 0,5 ha', '0,3 - 0,4 ha', '0,2 - 0,3 ha', '0,1 - 0,2 ha', 'Tidak ada'), labels = c('1.0-5.0', '0.9-1.0','0.7-0.8', '0.6-0.7', '0.5-0.6', '0.4-0.5', '0.3-0.4', '0.2-0.3', '0.1-0.2', '0-0.1'))\n\ndf$Aset_Lainnya <- factor(df$Aset_Lainnya, levels = c('Tidak Ada', 'Elektronik', 'Elektronik/Sepeda Motor', 'Elektronik/Mobil', 'Elektronik/Sepeda Motor/Mobil'),labels = c('Tidak Ada', 'Elektronik', 'Sepeda Motor', 'Mobil', 'Sepeda Motor dan Mobil'))\ndf$Perilaku_Hidup_Bersih <- as.factor(df$Perilaku_Hidup_Bersih)\n\n\nstr(df)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"summary(df$Bantuan_Desa)\nplot(df$Bantuan_Desa) ","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"write_xlsx(df, \"dataset_penelitian.xlsx\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **Pohon Keputusan C5.0**","metadata":{}},{"cell_type":"code","source":"input_columns <- c(\"Jenis_Kelamin\", \"Usia\", \"Anggota_Keluarga\", \n                   \"Pendidikan_Terakhir\", \"Pekerjaan\", \"Penghasilan\", \n                   \"Kepemilikan_Rumah\", \"Dinding\", \"Lantai\", \"Aset_Tanah\", \"Aset_Lainnya\", \"Perilaku_Hidup_Bersih\")\ndatafeed <- df[ , input_columns ]\nstr(datafeed)\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"head(datafeed)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"set.seed(100)\nindeks_training <- sample(c(TRUE, FALSE), nrow(df), replace=TRUE, prob=c(0.90,0.10))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data_training <- datafeed[indeks_training,]\nclass_training <- df[indeks_training,]$Bantuan_Desa\ndata_testing <- datafeed[!indeks_training,]\nstr(data_training)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data_training$Bantuan_Desa <- df[indeks_training,]$Bantuan_Desa\nhead(data_training)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"write_xlsx(data_training, \"dataset_training.xlsx\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"str(data_training)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"summary(data_training)\nplot(data_training) \n\n#jml <- nrow(data_training[data_training$Bantuan_Desa == 'Layak' & data_training$Usia == '75-99', ])\n#jml","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#library(FSelector)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Fungsi untuk menghitung entropi\nentropy <- function(p) {\n  # Menghindari log dari nol dengan menambahkan nilai kecil jika p adalah nol\n  p <- ifelse(p == 0, 1e-15, p)\n  -sum(p * log2(p))\n}\n\n# Fungsi untuk menghitung Gain Ratio\ngain_ratio <- function(data, target, input) {\n  # Menghitung entropi total\n  total_entropy <- entropy(prop.table(table(data[[target]])))\n  print(paste(\"Total entropy:\", total_entropy))\n\n  # Menghitung entropi untuk setiap nilai input dan menghitung weighted sum\n  input_levels <- levels(factor(data[[input]]))\n  weighted_entropy <- 0\n  split_info <- 0\n  for (level in input_levels) {\n    subset <- data[data[[input]] == level, ]\n    print(level)\n    p <- prop.table(table(subset[[target]]))\n    subset_entropy <- entropy(p)\n    print(p)\n    weighted_entropy <- weighted_entropy + (nrow(subset) / nrow(data)) * subset_entropy\n    # Menghindari log dari nol dengan menambahkan nilai kecil jika proporsi adalah nol\n    print(paste(\"Entropy:\", entropy(p)))\n    print(paste(\"Weighted entropy:\", weighted_entropy))\n    prop_subset <- nrow(subset) / nrow(data)\n    prop_subset <- ifelse(prop_subset == 0, 1e-15, prop_subset)\n    split_info <- split_info - prop_subset * log2(prop_subset)\n  }\n\n  # Menghitung Information Gain\n  info_gain <- total_entropy - weighted_entropy\n  print(paste(\"Info gain:\", info_gain))\n\n  # Menghindari pembagian dengan nol pada Gain Ratio\n  gain_ratio <- ifelse(split_info == 0, 0, info_gain / split_info)\n  print(paste(\"Gain ratio:\", gain_ratio))\n\n  return(gain_ratio)\n}\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Jenis_Kelamin\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Usia\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Anggota_Keluarga\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Pendidikan_Terakhir\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Pekerjaan\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Penghasilan\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Kepemilikan_Rumah\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Dinding\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Lantai\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Aset_Tanah\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Aset_Lainnya\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"result <- gain_ratio(data_training, \"Bantuan_Desa\", \"Perilaku_Hidup_Bersih\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data_training <- datafeed[indeks_training,]\nhead(data_training)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"write_xlsx(data_training, \"data_training.xlsx\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"str(class_training)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"str(data_testing)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"head(data_testing)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"write_xlsx(data_testing, \"data_testing.xlsx\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"library(\"C50\")\n\ncontrol_ops <- C5.0Control(subset = TRUE,\n                           #winnow = TRUE,\n                           noGlobalPruning = TRUE,\n                           CF = 0.5,\n                           minCases =1,\n                           #seed = 100,\n                           #earlyStopping = FALSE,\n                           label = \"Bantuan_Desa\")\n\n# Membangun model C5.0\nmodel_bantuan_desa <- C5.0(\n    x = data_training, \n    y = class_training,\n    control = control_ops,\n    trials = 1\n)\n\n\n# Melihat overview dari model diatas\nsummary(model_bantuan_desa)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plot(model_bantuan_desa, 0)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"png(\"plot.png\", width=2600, height=1200)\nplot(model_bantuan_desa, 0)\ndev.off()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"#  **Evaluasi**","metadata":{}},{"cell_type":"code","source":"data_testing$Bantuan_Desa <- df[!indeks_training,]$Bantuan_Desa\ndata_testing$hasil_prediksi <- predict(model_bantuan_desa, data_testing)\ndata_testing","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"write_xlsx(data_testing, \"hasilprediksi.xlsx\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"library(\"reshape2\")\n\n# Menggunakan dcast untuk membuat confusion matrix\n#dcast(hasil_prediksi ~ Bantuan_Desa, data=input_testing_set)\nconfusion_matrix <- dcast(data_testing, Bantuan_Desa ~ hasil_prediksi, value.var = 'hasil_prediksi', fun.aggregate = length)\nprint(confusion_matrix)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Menghitung jumlah prediksi yang benar\njumlah_benar <- nrow(data_testing[data_testing$Bantuan_Desa == data_testing$hasil_prediksi, ])\nprint(paste(\"jumlah_benar:\",jumlah_benar))\n\n# Menghitung jumlah prediksi yang salah\njumlah_salah <- nrow(data_testing[data_testing$Bantuan_Desa != data_testing$hasil_prediksi, ])\nprint(paste(\"jumlah_salah:\", jumlah_salah))\n\n# Menghitung akurasi\nakurasi <- jumlah_benar / (jumlah_benar + jumlah_salah)*100\n\n# Menghitung presisi dan recall\n# Presisi: Jumlah prediksi positif benar dibagi dengan jumlah semua prediksi positif\n# Recall: Jumlah prediksi positif benar dibagi dengan jumlah semua kasus positif sebenarnya\n\npresisi <- nrow(data_testing[data_testing$Bantuan_Desa == 'Layak' & data_testing$hasil_prediksi == 'Layak', ]) / \n           nrow(data_testing[data_testing$Bantuan_Desa == 'Layak', ])\n\nrecall <- nrow(data_testing[data_testing$Bantuan_Desa == 'Layak' & data_testing$hasil_prediksi == 'Layak', ]) / \n            nrow(data_testing[data_testing$hasil_prediksi == 'Layak', ])\n\n# Menampilkan hasil\nprint(paste(\"Akurasi:\", akurasi))\nprint(paste(\"Presisi:\", presisi))\nprint(paste(\"Recall:\", recall))","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}